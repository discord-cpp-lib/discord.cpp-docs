const simpleBot = '## Simple Bot\nIn this example we\'re going to create a very simple bot using discord.cpp, that simply checks for an emoji  inside a message, and, if it exists, reacts to the message with that emoji.\n\nLet\'s check the code out:\n```cpp\n#include <iostream>\n#include <dpp.h> // include discord.cpp\n\nint main()\n{\n  dpp::Client client; // create a client instance \n  \n  // onReady function is not really necessary, but quite usual\n  client.onReady = [&client]() {\n    std::cout << "hello, dpp" << std::endl;\n    std::cout << client.user.id << std::endl;\n  };\n  \n  client.onMessage = [](const dpp::Message& message){\n    if (message.author.bot) return; // checks wheter the message is from a bot\n    \n    if (message.content.find("ðŸ˜Ž") != std::string::npos) // checks if "ðŸ˜Ž" is in the message\n      message.add_reaction("ðŸ˜Ž"); // reacts to the message with "ðŸ˜Ž"\n  };\n  \n  const std::string token = "BOT_TOKEN_HERE"; // you might want to get this from another file\n  client.run(token); // actually initializes the bot, everything after this is unreachable\n  \n  return 0;\n}\n```\n### Result:\n<img src="https://i.ibb.co/gW976F8/Screenshot-1.png">\n\n### Note\nIn case you\'re somewhat new to C++, don\'t be afraid of that JavaScript-arrow-function-like syntax, those are [lambda functions](https://www.geeksforgeeks.org/lambda-expression-in-c/). Please visit this article if you want to know more about them.';
export default simpleBot;